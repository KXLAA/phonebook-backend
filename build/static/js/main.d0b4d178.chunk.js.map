{"version":3,"sources":["components/Filter.js","services/numbers.js","components/Numbers.js","components/From.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","numbers","setFoundNumbers","useState","search","setSearch","htmlFor","type","value","onChange","event","searchInput","target","results","filter","number","name","toLowerCase","includes","trim","placeholder","baseUrl","axios","get","then","response","data","numObj","post","id","delete","put","Numbers","foundNumbers","deleteNumbers","map","user","onClick","Form","newNumber","handleChange","addNumbers","console","log","required","Notification","className","Error","error","App","setNumbers","setNewNumber","notification","setNotification","setError","useEffect","numberService","initialNum","userId","window","confirm","prevName","preventDefault","newNumberObj","date","Date","toISOString","numberToUpdate","find","updatedNumber","returnedNumber","setTimeout","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0b4d178.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const Filter = ({ numbers, setFoundNumbers }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const filter = (event) => {\n    const searchInput = event.target.value;\n    if (searchInput !== \"\") {\n      const results = numbers.filter((number) =>\n        number.name.toLowerCase().includes(searchInput.toLowerCase())\n      );\n      setFoundNumbers(results);\n    } else {\n      setFoundNumbers(numbers);\n    }\n    setSearch(searchInput.trim());\n  };\n\n  return (\n    <>\n      <label htmlFor=\"name\">Filter shown with: </label>\n      <input\n        type=\"search\"\n        value={search}\n        onChange={filter}\n        placeholder=\"Filter\"\n      />\n    </>\n  );\n};\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (numObj) => {\n  const request = axios.post(baseUrl, numObj);\n  return request.then((response) => response.data);\n};\n\nconst deleteNum = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\n\nconst update = (id, numObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, numObj);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  deleteNum,\n  update,\n};\n","import React from \"react\";\n\nexport const Numbers = ({ foundNumbers, deleteNumbers }) => {\n  return (\n    <>\n      {foundNumbers.map((user) => (\n        <p key={user.id}>\n          {user.name} {user.number}{\" \"}\n          <button onClick={() => deleteNumbers(user.id, user.name)}>\n            {\" \"}\n            DELETE{\" \"}\n          </button>\n        </p>\n      ))}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Form = ({ newNumber, handleChange, addNumbers }) => {\n  console.log(newNumber);\n  return (\n    <>\n      <form>\n        <label htmlFor=\"name\">Full Name:</label>\n        {\"  \"}\n        <input\n          required\n          name=\"name\"\n          type=\"text\"\n          value={newNumber.name}\n          onChange={handleChange}\n        />\n        {\"  \"}\n        <label htmlFor=\"number\">Phone Number:</label> {\"  \"}\n        <input\n          name=\"number\"\n          type=\"text\"\n          value={newNumber.number}\n          onChange={handleChange}\n        />\n        <button onClick={addNumbers} type=\"submit\">\n          ADD NUMBER\n        </button>\n      </form>\n    </>\n  );\n};\n","const Notification = ({ name }) => {\n  if (name === null) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"success\">{name}</div>\n    </>\n  );\n};\n\nexport default Notification;\n","const Error = ({ error }) => {\n  if (error === null) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"error\">{}</div>\n    </>\n  );\n};\n\nexport default Error;\n","import React, { useState, useEffect } from \"react\";\nimport { Filter } from \"./components/Filter\";\nimport numberService from \"./services/numbers\";\nimport { Numbers } from \"./components/Numbers\";\nimport { Form } from \"./components/From\";\nimport Notification from \"./components/Notification\";\nimport Error from \"./components/Error\";\n\nconst App = () => {\n  const [numbers, setNumbers] = useState([]);\n  const [foundNumbers, setFoundNumbers] = useState([]);\n  const [newNumber, setNewNumber] = useState({ name: \"\", number: \"\" });\n  const [notification, setNotification] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    numberService.getAll().then((initialNum) => {\n      setNumbers(initialNum);\n      setFoundNumbers(initialNum);\n    });\n  }, []);\n\n  const addNumbers = (event) => {\n    event.preventDefault();\n\n    //Make new number object\n    const newNumberObj = {\n      name: newNumber.name,\n      number: newNumber.number,\n      date: new Date().toISOString(),\n    };\n\n    //Check if new number object matches with any currently existing number\n    const numberToUpdate = numbers.find(\n      (number) => number.name === newNumberObj.name\n    );\n\n    //if it does, update old number object, with new number object\n    if (numberToUpdate) {\n      window.confirm(\n        `${newNumberObj.name} is already added to the phonebook, replace the old number with a new one ?`\n      );\n\n      const updatedNumber = {\n        ...numberToUpdate,\n        name: newNumberObj.name,\n        number: newNumberObj.number,\n        date: new Date().toISOString(),\n      };\n\n      numberService\n        .update(numberToUpdate.id, updatedNumber)\n        .then((returnedNumber) => {\n          setNumbers(\n            numbers.map((number) =>\n              number.id !== returnedNumber.name ? number : returnedNumber\n            )\n          );\n          //Show notification\n          setNotification(`Updated: ${returnedNumber.name}`);\n          //clear notification after 5 seconds\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error);\n          setError(\n            `Information on${updatedNumber.name} has already been removed from server`\n          );\n          setTimeout(() => {\n            setError(null);\n          }, 5000);\n        });\n    } else {\n      //if it does not, add new Number\n      numberService.create(newNumberObj).then((newNumber) => {\n        setFoundNumbers([...foundNumbers, newNumber]);\n        //Show notification\n        setNotification(`Added: ${newNumberObj.name}`);\n        //clear notification after 5 seconds\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n    }\n    setNewNumber({ name: \" \", number: \" \" });\n  };\n\n  const deleteNumbers = (userId, user) => {\n    if (window.confirm(` Are you sure you want to delete ${user} ? `)) {\n      numberService.deleteNum(userId);\n      setFoundNumbers(foundNumbers.filter((user) => user.id !== userId));\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setNewNumber((prevName) => ({\n      ...prevName,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div>\n      <Error error={error} />\n      <Notification name={notification} />\n      <h2>Phone-Book</h2>\n      <Filter numbers={numbers} setFoundNumbers={setFoundNumbers} />\n\n      <h2>Numbers</h2>\n      <Numbers foundNumbers={foundNumbers} deleteNumbers={deleteNumbers} />\n      <h2>Add New Number</h2>\n\n      <Form\n        newNumber={newNumber}\n        handleChange={handleChange}\n        addNumbers={addNumbers}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}